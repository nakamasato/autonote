name: dev

on:
  pull_request:
    paths:
      - .github/workflows/dev.yml
      - '**.py'
      - poetry.lock
      - pyporject.toml
  push:
    branches:
      - main

jobs:
  ci:
    # Set up operating system
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.10.x, 3.11.x, 3.12.x]

    # Define job steps
    steps:
      - name: Check-out repository
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4

      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Load cached Poetry installation
        id: cached-poetry
        uses: actions/cache@v4
        with:
          path: ~/.local  # the path depends on the OS
          key: poetry-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}

      - name: Install poetry
        if: steps.cached-poetry.outputs.cache-hit != 'true'
        uses: snok/install-poetry@v1
        with:
          version: 1.8.2
          virtualenvs-create: true # true by default
          virtualenvs-in-project: true # false by default
          installer-parallel: true

      - name: Restore cached dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install package
        run: make install

      - name: Lint
        if: matrix.python-version == '3.12' # only run on the latest Python version
        run: make lint

      - name: Test with pytest
        run: make test

      - name: Use Codecov to track coverage
        if: matrix.python-version == '3.12' # only run on the latest Python version
        uses: codecov/codecov-action@v5
        with:
          files: ./coverage.xml   # coverage report

      - name: Build documentation
        if: matrix.python-version == '3.12' # only run on the latest Python version
        run: make docs

      - name: Build package
        run: make build

      - name: Run against Notion demo page
        if: matrix.python-version == '3.12' # only run on the latest Python version
        env:
          NOTION_INTEGRATION_TOKEN: ${{ secrets.NOTION_INTEGRATION_TOKEN }}
        run: make e2e-notion
