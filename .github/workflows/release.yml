name: release # you cannot change this workflow name as it's used for trusted publisher

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  prerelease:
    environment:
      name: pypi
      url: https://pypi.org/p/autonote
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    concurrency: prerelease
    permissions:
      id-token: write
      contents: write
      pull-requests: write

    steps:
      - name: Check-out repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 0

      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version-file: .python-version

      - name: Load cached Poetry installation
        id: cached-poetry
        uses: actions/cache@v4
        with:
          path: ~/.local  # the path depends on the OS
          key: poetry-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}

      - name: Install poetry
        if: steps.cached-poetry.outputs.cache-hit != 'true'
        uses: snok/install-poetry@v1
        with:
          version: 1.8.2
          virtualenvs-create: true # true by default
          virtualenvs-in-project: true # false by default
          installer-parallel: true

      - name: Restore cached dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install
        run: make install

      - name: sematic release
        id: semantic-release
        run: |
          poetry run semantic-release version --prerelease --no-push --no-tag
          echo "version=$(poetry version --short)" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build package
        run: make build

      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          skip_existing: true

      # TODO: fix
      # - name: Test install from TestPyPI
      #   run: |
      #       pip install \
      #       --index-url https://test.pypi.org/simple/ \
      #       --extra-index-url https://pypi.org/simple \
      #       autonote==$(poetry version --short)

      - name: Get changed files in the docs folder
        id: changed-files-specific
        uses: tj-actions/changed-files@v46
        with:
          files: |
            pyproject.toml

      - name: Create Pull Request
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        uses: peter-evans/create-pull-request@v7
        with:
          title: "chore: prerelease new version ${{ steps.semantic-release.outputs.version }}"
          commit-message: "chore: prerelease new version ${{ steps.semantic-release.outputs.version }}"
          labels: prerelease
          branch: prerelease
          add-paths: |
            pyproject.toml
          body: |
            New version ${{ steps.semantic-release.outputs.version }} is prereleased.
            You can check on https://test.pypi.org/project/autonote/

  release:
    if: github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/main'
    environment:
      name: pypi
      url: https://pypi.org/p/autonote
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
      contents: write  # to create GitHub Releases
      pull-requests: write # to create pull requests
    runs-on: ubuntu-latest
    steps:
      - name: Check-out repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 0

      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version-file: .python-version

      - name: Load cached Poetry installation
        id: cached-poetry
        uses: actions/cache@v4
        with:
          path: ~/.local  # the path depends on the OS
          key: poetry-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}

      - name: Install poetry
        if: steps.cached-poetry.outputs.cache-hit != 'true'
        uses: snok/install-poetry@v1
        with:
          version: 1.8.2
          virtualenvs-create: true # true by default
          virtualenvs-in-project: true # false by default
          installer-parallel: true

      - name: Restore cached dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install package
        run: make install

      - name: sematic release
        id: semantic-release
        run: |
          poetry run semantic-release version --no-push
          echo "version=$(poetry version --short)" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build package
        run: make build

      # ERROR: This filename has already been used, use a different version.
      # - name: Publish to TestPyPI
      #   uses: pypa/gh-action-pypi-publish@release/v1
      #   with:
      #     repository-url: https://test.pypi.org/legacy/
      #     skip_existing: true

      # - name: Test install from TestPyPI
      #   run: |
      #       pip install \
      #       --index-url https://test.pypi.org/simple/ \
      #       --extra-index-url https://pypi.org/simple \
      #       autonote

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip_existing: true

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v7
        with:
          title: "chore: release new version ${{ steps.semantic-release.outputs.version }}"
          commit-message: "chore: release new version ${{ steps.semantic-release.outputs.version }}"
          labels: release
          branch: release
          body: |
            New version ${{ steps.semantic-release.outputs.version }} is released.
            You can check on https://pypi.org/project/autonote/
